rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check ownership
    function isOwner(treeId) {
      return get(/databases/$(database)/documents/trees/$(treeId)).data.ownerId == request.auth.uid;
    }

    // Allow authenticated users to upload files to any tree.
    // In a real-world scenario with collaborators, you'd check if the user 
    // is part of the collaborators map in the tree document.
    // For this scaffold, allowing any authenticated user is sufficient.
    match /trees/{treeId}/people/{personId}/{fileName} {
      allow read;
      allow write: if request.auth != null;
    }

    // A more secure rule for production would be:
    // allow write: if isOwner(treeId) || 
    //                 get(/databases/$(database)/documents/trees/$(treeId)).data.collaborators[request.auth.uid] != null;
    
    // Allow users to write to their own private folders (e.g., for avatars)
    match /users/{userId}/{allPaths=**} {
      allow read;
      allow write: if request.auth.uid == userId;
    }
  }
}
